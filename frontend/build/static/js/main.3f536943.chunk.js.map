{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Meta.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/orderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","useInfo","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Date","getFullYear","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Meta","description","keywords","Helmet","content","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","Axios","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3f536943.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store\r\n\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return { \r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\n\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, useInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state ={}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state ={ loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state ={}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state ={ orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state ={ orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state ={}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"q\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder=\"Search products...\"\r\n                className=\"mr-sm-2 ml-sm-5\">\r\n            </Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n        \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n        \r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n        \r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n        \r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n        \r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n        \r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n        \r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n          <Container>\r\n            <LinkContainer to='/'>\r\n              <Navbar.Brand>IMart</Navbar.Brand>\r\n            </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n              <Route render={({ history }) => <SearchBox history={history} />} />\r\n              \r\n              <Nav className=\"ml-auto\">\r\n                <LinkContainer to='/cart'>\r\n                  <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                </LinkContainer>\r\n\r\n                {userInfo ? (\r\n                  <NavDropdown title={userInfo.name} id='username'>\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                ) : (<LinkContainer to='/login'>\r\n                    <Nav.Link><i className=\"fas fa-user\"></i>Sign In</Nav.Link>\r\n                </LinkContainer>)\r\n                }\r\n                {\r\n                  userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title='Admin' id='adminmenu'>\r\n                    <LinkContainer to='/admin/userlist'>\r\n                      <NavDropdown.Item>Users</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/productlist'>\r\n                      <NavDropdown.Item>Products</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/orderlist'>\r\n                      <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                  </NavDropdown>\r\n                  )\r\n                }\r\n              </Nav>\r\n                </Navbar.Collapse>\r\n               </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright {new Date().getFullYear()} &copy; IMart\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'}>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'}>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'}>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'}>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'}>\r\n                </i>\r\n            </span>\r\n            <span>{text && text }</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nRating.defaultProps = {\r\n    color: '#ffbe00',\r\n}\r\n\r\nexport default Rating;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-2 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n              <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div'>\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}>\r\n                    </Rating>\r\n                </Card.Text>\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;","import React from 'react';\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"keywords\" content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to IMart',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\nexport default Meta","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    \r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {\r\n                [...Array(pages).keys()].map(x => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={ !isAdmin ?\r\n                                keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`\r\n                                : `/admin/productlist/${x + 1}` }\r\n                    >\r\n                        <Pagination.Item active={ x + 1 === page }>{x + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))\r\n            }\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n        \r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_TOP_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data,\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n    \r\n    return loading ?\r\n        <Loader /> : error ? <Message variant='danger'>{error}</Message> \r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {\r\n                        products.map(product => (\r\n                            <Carousel.Item key={ product._id }>\r\n                                <Link to={`/product/${product._id}`}>\r\n                                    <Image src={ product.image } alt={ product.name } fluid />\r\n                                    <Carousel.Caption className='carousel-captions'>\r\n                                        <h2>{ product.name } (${ product.price })</h2>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n                            </Carousel.Item>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n        )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {\r\n                !keyword ? <ProductCarousel /> : <Link to='/' className=\"btn btn-light\">Go Back</Link>\r\n            }\r\n            <h1>Latest Products</h1>\r\n            {\r\n                loading ?\r\n                    <Loader /> : error ? <Message variant=\"danger\">{error}</Message>\r\n                        : (\r\n                            <>  \r\n                                <Row>\r\n                                    {products.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                                <Paginate pages={ pages } page={ page } keyword={ keyword ? keyword : '' } />\r\n                            </>\r\n                            \r\n                        )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Form, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { createProductReview, listProductDetails } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport Rating from '../components/Rating'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [ comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { success:successProductReview, error:errorProductReview} = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/' className=\"btn btn-light my-3 rounded\">Go Back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :\r\n                <>\r\n                    <Meta title={ product.name } />\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Rating\r\n                                    value={product.rating}\r\n                                    text={`${product.numReviews} reviews`}>\r\n                                </Rating>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                Description: {product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Price:\r\n                                    </Col>\r\n                                        <Col>\r\n                                            <strong>${product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Status:\r\n                                    </Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Qty</Col>\r\n                                        <Col>\r\n                                            <Form.Control as=\"select\" value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                {\r\n                                                    [...Array(product.countInStock).keys()].map(x => (\r\n                                                 <option key={x + 1} value={x + 1}>{x + 1}</option>))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        onClick={addToCartHandler}\r\n                                        className='btn-block rounded'\r\n                                        type='button'\r\n                                        disabled={product.countInStock === 0}>\r\n                                        Add To Cart\r\n                                </Button>\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a customer review</h2>\r\n                                    {\r\n                                        errorProductReview && <Message variant='danger'>{errorProductReview}</Message>\r\n                                    }\r\n                                    {\r\n                                        userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId=\"rating\">\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                                        <option value=\"\">Select...</option>\r\n                                                        <option value=\"1\">1 - Poor</option>\r\n                                                        <option value=\"2\">2 - Fair</option>\r\n                                                        <option value=\"3\">3 - Good</option>\r\n                                                        <option value=\"4\">4 - Very Good</option>\r\n                                                        <option value=\"5\">5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Comment</Form.Label>\r\n                                                    <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                                </Form.Group>\r\n                                                <Button type='submit' variant='primary'>Submit</Button>\r\n                                            </Form>\r\n                                    ) :\r\n                                        <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>\r\n                                    }\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n                \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    \r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Image, ListGroup, Button, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : \r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map(x => \r\n                                                 <option key={x + 1} value={x + 1}>{x + 1}</option>)\r\n                                            }\r\n                                            </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )\r\n                            )}\r\n                    </ListGroup>\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}>\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    { children }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { login } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?\r\n                     <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Your Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account?\r\n                     <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders} from '../actions/orderAction'\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Your Name</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {\r\n                    loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                        <Table striped bordered hover responsive className=\"table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm' variant=\"light\">Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;","import Axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await Axios.post(`/api/orders`, order, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await Axios.get(`/api/orders/${id}`, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await Axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await Axios.get(`/api/orders/myorders`, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await Axios.get(`/api/orders`, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await Axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Your Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;","import React, { useState } from 'react'\r\nimport { Button, Col, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' checked onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                        {/* <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' value='Stripe' onChange={(e) =>setPaymentMethod(e.target.value)}></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;","import React, { useEffect } from 'react'\r\nimport { Button, Card, Col, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport Message from '../components/Message'\r\nimport { createOrder } from '../actions/orderAction'\r\n\r\n\r\n\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // Fixed Decimals\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    // Calculate Prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 80)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n    \r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    },[history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />  \r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${ cart.itemsPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${ cart.shippingPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${ cart.taxPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${ cart.totalPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message value='danger'>{error}</Message> }\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Button, Card, Col, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderAction'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    \r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n    \r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading) {\r\n        // Fixed Decimals\r\n        const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n        // Calculate Prices\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    }   \r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPaypalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [order, orderId, successPay, order, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{ order.user.email }</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Delivered on { order.deliveredAt }</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on { order.paidAt }</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${ order.itemsPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${ order.shippingPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${ order.taxPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${ order.totalPrice }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                    )} \r\n                                </ListGroup.Item>\r\n                            )}\r\n                            { loadingDeliver && <Loader />}\r\n                            {\r\n                                userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button type=\"button\" className=\"btn btn-block\" onClick={deliverHandler}>\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )\r\n                            }\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser} from '../actions/userActions'\r\n\r\n\r\nconst UserListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success:successDelete } = userDelete\r\n    \r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n             dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure, you want to delete?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {\r\n                loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                        <td>{\r\n                                            user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>) :\r\n                                            (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                        }\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant=\"light\" className=\"btn-sm\">\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n           if (!user.name || user._id !== userId) {\r\n           dispatch(getUserDetails(userId))\r\n        } else {\r\n           setName(user.name)\r\n           setEmail(user.email)\r\n           setIsAdmin(user.isAdmin)\r\n            } \r\n        } \r\n    }, [dispatch, userId, user, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\r\n                {\r\n                    loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId=\"name\">\r\n                                <Form.Label>Your Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"isadmin\">\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin?'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>Update</Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n    \r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET})\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } \r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure, you want to delete?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i>Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {\r\n                loading ?\r\n                    <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                        :\r\n                        (\r\n                            <>\r\n                                <Table striped bordered hover responsive className='table-sm'>\r\n                                    <thead>  \r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>NAME</th>\r\n                                            <th>PRICE</th>\r\n                                            <th>CATEGORY</th>\r\n                                            <th>BRAND</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            products.map(product => (\r\n                                                <tr key={product._id}>\r\n                                                    <td>{product._id}</td>\r\n                                                    <td>{product.name}</td>\r\n                                                    <td>${product.price}</td>\r\n                                                    <td>{product.category}</td>\r\n                                                    <td>{product.brand}</td>\r\n                                                    <td>\r\n                                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                            <Button variant=\"light\" className=\"btn-sm\">\r\n                                                                <i className='fas fa-edit'></i>\r\n                                                            </Button>\r\n                                                        </LinkContainer>\r\n                                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                            <i className='fas fa-trash'></i>\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Paginate pages={ pages } page={ page } isAdmin={ true } />\r\n                            </>\r\n                            \r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n\r\n    const productId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            } \r\n        }\r\n    }, [dispatch, productId, product, successUpdate, history])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\r\n                {\r\n                    loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId=\"name\">\r\n                                <Form.Label>Product Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"price\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"image\">\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter image url'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File id='image-file' label=\"Choose File\" custom onChange={uploadFileHandler}>\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"brand\">\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"countInStock\">\r\n                                <Form.Label>Count In Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter countInStock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"category\">\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"description\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>Update</Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderAction'\r\n\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n             dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {\r\n                loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${ order.totalPrice }</td>\r\n                                        <td>{\r\n                                            order.isPaid ? (order.paidAt.substring(0, 10)) :\r\n                                            (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                        }\r\n                                        </td>\r\n                                        <td>{\r\n                                            order.isDelivered ? (order.deliveredAt.substring(0, 10)) :\r\n                                            (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                        }\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant=\"light\" className=\"btn-sm\">\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/orderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header></Header>\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route exact path='/admin/productlist' component={ProductListScreen} />\n          <Route exact path='/admin/productlist/:pageNumber' component={ProductListScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route exact path='/search/:keyword' component={HomeScreen} />\n          <Route exact path='/page/:pageNumber' component={HomeScreen} />\n          <Route exact path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\n          <Route exact path='/' component={HomeScreen} />\n        </Container>\n      </main>\n      <Footer></Footer>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}